testind[which(ind_CVtest_s == k & ind_CVtest_s > 0)] <- 1
CV_ind <- c(CV_ind, which(testind==1))
p1 <- predict(CPC_hwy_1$gam, newdata = OnRoadData_select[which(testind==1),])
CV_fitted <- c(CV_fitted, p1)
cat(k, "th", "CV is done", "\n")
#p1_true <- log2(OnRoadData_select[which(testind == 1), "CPC_O"])
p1_true <- log2(1000*OnRoadData_select[which(testind == 1), "DUS_O"]+1)
naind <- which(is.na(p1) | is.na(p1_true))
Rsq_gam_p <- 1-sum((p1[-naind] - p1_true[-naind])^2)/
sum((p1_true[-naind] - mean(p1_true[-naind]))^2)
cat(k, "th", "CV is done, Rsq = ", Rsq_gam_p, "\n")
}
CV_true <- log2(1000*OnRoadData_select[CV_ind[-1], "DUS_O"]+1)
CV_fitted <- CV_fitted[-1]
naind <- which(is.na(CV_fitted) | is.na(CV_true))
Rsq_gam <- 1-sum((CV_fitted[-naind] - CV_true[-naind])^2)/
sum((CV_true[-naind] - mean(CV_true[-naind]))^2)
Rsq_gam
length(CV_true[-naind])
CPC_hwy_1 <- gamm(log2(DUS_O*1000 +1) ~ s(Temp_O, RH_O, bs = "tp") +
s(TempF.pred, Humidity.pred, bs = "tp") +
s(windNS, windEW, bs = "tp") + s(Speed, bs = "tp")+
Weekday + Summer + s(Back_AADT, bs = "tp"),
data = OnRoadData_select[which(ind_CVtest_s > 0), ],
na.action = na.omit,
corr = corAR1(form = ~ 1 | driver_ID /day_ID))
BIC(CPC_hwy_1$lme)
round(summary(CPC_hwy_1$gam)$edf)+1
summary(CPC_hwy_1$gam)
DUS_hwy_gam_ar1 <- CPC_hwy_1
save(DUS_hwy_gam_ar1,
file = "~/Google Drive/on_road/models/DUS_hwy_gam_ar1.RData")
round(summary(CPC_hwy_1$gam)$edf)+1
set.seed(111)
## cross validation by hand:
#folders <-cvFolds(length(ind_CVtest_s), K = 5, R = 1, type = "consecutive")
K <- 10
drlist <- unique(OnRoadData_select$driver_ID)
dlist <- unique((OnRoadData_select$day_ID))
ind_CVtest_s <- rep(0, dim(OnRoadData_select)[1])
for(dr in drlist) {
for(d in dlist) {
ind_d <- which(OnRoadData_select$driver_ID == dr &
OnRoadData_select$day_ID == d &
#OnRoadData_select$roadtype == "S1630")
OnRoadData_select$roadtype == "S1400" &
OnRoadData_select$Speed<75 )
#&
#(OnRoadData_select$roadtype == "S1100" |
#OnRoadData_select$roadtype == "S1200" ))
if(length(ind_d) < 50) {next}
cat("driver ", dr, "on day ", d, "divided in", K, "segment", "\n")
folders <- cvFolds(length(ind_d), K = K, R = 1, type = "consecutive")
seed <- sample.int(length(ind_d), 1)
if (seed == 1) {randomfold <- folders$which}
else {
randomfold <- c(folders$which[seed:length(ind_d)],
folders$which[1:(seed-1)])}
randomfold[which(!duplicated(randomfold))] <-
randomfold[which(!duplicated(randomfold))] + K
ind_CVtest_s[ind_d] <- randomfold
}
}
table(ind_CVtest_s)
colnames(OnRoadData_select)
CPC_hwy_1 <- lm(log2(DUS_O * 1000 + 1) ~ Temp_O + RH_O + TempF.pred +
Humidity.pred + WindDirectionDegrees.pred + WinspeedMPH.pred +
Speed + static+  roadtype + landuse2 +
Weekday + Summer + Back_AADT,
data = OnRoadData_select[which(ind_CVtest_s > 0), ],
na.action = na.omit)
CPC_hwy_1 <- lm(log2(DUS_O * 1000 + 1) ~ Temp_O + RH_O + TempF.pred +
Humidity.pred + WindDirectionDegrees.pred + WinspeedMPH.pred +
Speed + static+ landuse2 +
Weekday + Summer ,
data = OnRoadData_select[which(ind_CVtest_s > 0), ],
na.action = na.omit)
summary(CPC_hwy_1)
AIC(CPC_hwy_1)
BIC(CPC_hwy_1)
CPC_hwy_1 <- lm(log2(DUS_O * 1000 + 1) ~ Temp_O + RH_O + TempF.p +
Humidity.p + WindDirectionDegrees.pred + WinspeedMPH.pred +
Speed + static+ landuse2 +
Weekday + Summer ,
data = OnRoadData_select[which(ind_CVtest_s > 0), ],
na.action = na.omit)
summary(CPC_hwy_1)
AIC(CPC_hwy_1)
BIC(CPC_hwy_1)
CPC_hwy_1 <- lm(log2(DUS_O * 1000 + 1) ~ Temp_O + RH_O + TempF.pred +
Humidity.pred + WindDirectionDegrees.p + WinspeedMPH.p +
Speed + static+ landuse2 +
Weekday + Summer ,
data = OnRoadData_select[which(ind_CVtest_s > 0), ],
na.action = na.omit)
summary(CPC_hwy_1)
AIC(CPC_hwy_1)
BIC(CPC_hwy_1)
CPC_hwy_1 <- lm(log2(DUS_O * 1000 + 1) ~ Temp_O + RH_O + TempF.pred +
Humidity.pred + WindDirectionDegrees.pred + WinspeedMPH.pred +
Speed + static+ landuse2 +Weekday + Summer ,
data = OnRoadData_select[which(ind_CVtest_s > 0), ],
na.action = na.omit)
summary(CPC_hwy_1)
AIC(CPC_hwy_1)
BIC(CPC_hwy_1)
CPC_hwy_1 <- lm(log2(DUS_O * 1000 + 1) ~ Temp_O + TempF.pred +
Humidity.pred + WindDirectionDegrees.pred + WinspeedMPH.pred +
Speed + static+ landuse2 +Weekday + Summer ,
data = OnRoadData_select[which(ind_CVtest_s > 0), ],
na.action = na.omit)
summary(CPC_hwy_1)
AIC(CPC_hwy_1)
BIC(CPC_hwy_1)
CPC_hwy_1 <- lm(log2(DUS_O * 1000 + 1) ~ Temp_O + RH_O + TempF.pred +
Humidity.pred + WindDirectionDegrees.pred + WinspeedMPH.pred +
static+ landuse2 +Weekday + Summer ,
data = OnRoadData_select[which(ind_CVtest_s > 0), ],
na.action = na.omit)
summary(CPC_hwy_1)
AIC(CPC_hwy_1)
BIC(CPC_hwy_1)
CPC_hwy_1 <- lm(log2(DUS_O * 1000 + 1) ~ Temp_O + RH_O + TempF.pred +
Humidity.pred + WindDirectionDegrees.pred + WinspeedMPH.pred +
Speed + static+ landuse2 +Weekday + Summer ,
data = OnRoadData_select[which(ind_CVtest_s > 0), ],
na.action = na.omit)
summary(CPC_hwy_1)
AIC(CPC_hwy_1)
BIC(CPC_hwy_1)
DUS_local_linear <- CPC_hwy_1
CPC_hwy_1 <- lm(log2(DUS_O * 1000 + 1) ~ Temp_O + RH_O + TempF.pred +
Humidity.pred + WindDirectionDegrees.pred + WinspeedMPH.pred +
Speed + static+ landuse2 +Weekday + Summer ,
data = OnRoadData_select[which(ind_CVtest_s > 0), ],
na.action = na.omit)
summary(CPC_hwy_1)
AIC(CPC_hwy_1)
BIC(CPC_hwy_1)
plot(CPC_hwy_1)
DUS_local_linear <- CPC_hwy_1
save(DUS_hwy_linear,
file = "~/Google Drive/on_road/models/DUS_local_linear.RData")
summary(CPC_hwy_1)
colnames( OnRoadData_select)
CPC_hwy_1 <- gam(log2(DUS_O * 1000 + 1) ~ s(Temp_O, RH_O, bs = "tp") +
s(TempF.pred, Humidity.pred, bs = "tp") +
s(windNS, windEW, bs = "tp") + s(Speed, bs = "tp") +
landuse2 +static +  Weekday + Summer ,
data = OnRoadData_select[which(ind_CVtest_s > 0), ],
na.action = na.omit)
summary(CPC_hwy_1)
round(summary(CPC_hwy_1)$edf)+1
AIC(CPC_hwy_1)
BIC(CPC_hwy_1)
plot(CPC_hwy_1)
CPC_hwy_1 <- gam(log2(DUS_O * 1000 + 1) ~ s(Temp_O, RH_O, bs = "tp") +
s(TempF.pred, Humidity.pred, bs = "tp") +
s(windNS, windEW, bs = "tp") +
landuse2 +static +  Weekday + Summer ,
data = OnRoadData_select[which(ind_CVtest_s > 0), ],
na.action = na.omit)
summary(CPC_hwy_1)
BIC(CPC_hwy_1)
CPC_hwy_1 <- gam(log2(DUS_O * 1000 + 1) ~ s(Temp_O, RH_O, bs = "gp") +
s(TempF.pred, Humidity.pred, bs = "gp") +
s(windNS, windEW, bs = "gp") + s(Speed, bs = "gp") +
landuse2 +static +  Weekday + Summer ,
data = OnRoadData_select[which(ind_CVtest_s > 0), ],
na.action = na.omit)
summary(CPC_hwy_1)
round(summary(CPC_hwy_1)$edf)+1
AIC(CPC_hwy_1)
BIC(CPC_hwy_1)
CV_ind <- c(0)
CV_fitted <- c(0)
for (k in 1: K){
trainind <- rep(0, length(ind_CVtest_s))
trainind[which(ind_CVtest_s!= k & ind_CVtest_s > 0)] <- 1
splitind <- which(ind_CVtest_s == k+K | ind_CVtest_s == k + K +1)
removeind <- c(0)
for( i in splitind) {
removeind <- c(removeind, i+ c(-9:9))
}
removeind <- removeind[which(removeind> 0 & removeind <= length(ind_CVtest_s))]
trainind[removeind] <- 0
CPC_hwy_1 <- gam(log2(DUS_O * 1000 + 1) ~ s(Temp_O, RH_O, bs = "tp") +
s(TempF.pred, Humidity.pred, bs = "tp") +
s(windNS, windEW, bs = "tp") + s(Speed, bs = "tp") +
landuse2 +static +  Weekday + Summer ,
data = OnRoadData_select[which(trainind == 1), ],
na.action = na.omit)
print(summary(CPC_hwy_1))
testind <- rep(0, length(ind_CVtest_s))
testind[which(ind_CVtest_s == k & ind_CVtest_s > 0)] <- 1
CV_ind <- c(CV_ind, which(testind==1))
p1 <- predict(CPC_hwy_1, newdata = OnRoadData_select[which(testind==1),])
CV_fitted <- c(CV_fitted, p1)
cat(k, "th", "CV is done", "\n")
#p1_true <- log2(OnRoadData_select[which(testind == 1), "CPC_O"])
p1_true <- log2(1000*OnRoadData_select[which(testind == 1), "DUS_O"]+1)
naind <- which(is.na(p1) | is.na(p1_true))
Rsq_gam_p <- 1-sum((p1[-naind] - p1_true[-naind])^2)/
sum((p1_true[-naind] - mean(p1_true[-naind]))^2)
cat(k, "th", "CV is done, Rsq = ", Rsq_gam_p, "\n")
}
#CV_true <- log2(OnRoadData_select[CV_ind[-1], "CPC_O"])
CV_true <- log2(1000*OnRoadData_select[CV_ind[-1], "DUS_O"]+1)
CV_fitted <- CV_fitted[-1]
naind <- which(is.na(CV_fitted) | is.na(CV_true))
Rsq_gam <- 1-sum((CV_fitted[-naind] - CV_true[-naind])^2)/
sum((CV_true[-naind] - mean(CV_true[-naind]))^2)
Rsq_gam
length(CV_true[-naind])
CPC_hwy_1 <- gam(log2(DUS_O * 1000 + 1) ~ s(Temp_O, RH_O, bs = "tp") +
s(TempF.pred, Humidity.pred, bs = "tp") +
s(windNS, windEW, bs = "tp") + s(Speed, bs = "tp") +
landuse2 +static +  Weekday + Summer ,
data = OnRoadData_select[which(ind_CVtest_s > 0), ],
na.action = na.omit)
summary(CPC_hwy_1)
DUS_local_gam <- CPC_hwy_1
save(DUS_local_gam ,
file = "~/Google Drive/on_road/models/DUS_local_gam.RData")
CV_ind <- c(0)
CV_fitted <- c(0)
for (k in 1: K){
trainind <- rep(0, length(ind_CVtest_s))
trainind[which(ind_CVtest_s!= k & ind_CVtest_s > 0)] <- 1
splitind <- which(ind_CVtest_s == k+K | ind_CVtest_s == k + K +1)
removeind <- c(0)
for( i in splitind) {
removeind <- c(removeind, i+ c(-9:9))
}
removeind <- removeind[which(removeind> 0 & removeind <= length(ind_CVtest_s))]
trainind[removeind] <- 0
CPC_hwy_1 <- gamm(log2(DUS_O*1000 +1) ~ s(Temp_O, RH_O, bs = "tp") +
s(TempF.pred, Humidity.pred, bs = "tp") +
s(windNS, windEW, bs = "tp") + s(Speed, bs = "tp")+
Weekday + Summer + s(Back_AADT, bs = "tp"),
data = OnRoadData_select[which(trainind == 1), ],
na.action = na.omit,
corr = corAR1(form = ~ 1 | driver_ID /day_ID))
#corr = corARMA(p = 1, q = 1, form = ~ 1 | driver_ID /day_ID))
#correlation = corSpatial(
#   form =  ~ time| driver_ID/day_ID,
#   nugget = TRUE, type = "exponential",
#  metric = "euclidean") )
print(summary(CPC_hwy_1$gam))
testind <- rep(0, length(ind_CVtest_s))
testind[which(ind_CVtest_s == k & ind_CVtest_s > 0)] <- 1
CV_ind <- c(CV_ind, which(testind==1))
p1 <- predict(CPC_hwy_1$gam, newdata = OnRoadData_select[which(testind==1),])
CV_fitted <- c(CV_fitted, p1)
cat(k, "th", "CV is done", "\n")
#p1_true <- log2(OnRoadData_select[which(testind == 1), "CPC_O"])
p1_true <- log2(1000*OnRoadData_select[which(testind == 1), "DUS_O"]+1)
naind <- which(is.na(p1) | is.na(p1_true))
Rsq_gam_p <- 1-sum((p1[-naind] - p1_true[-naind])^2)/
sum((p1_true[-naind] - mean(p1_true[-naind]))^2)
cat(k, "th", "CV is done, Rsq = ", Rsq_gam_p, "\n")
}
#CV_true <- log2(OnRoadData_select[CV_ind[-1], "CPC_O"])
CV_true <- log2(1000*OnRoadData_select[CV_ind[-1], "DUS_O"]+1)
CV_fitted <- CV_fitted[-1]
naind <- which(is.na(CV_fitted) | is.na(CV_true))
Rsq_gam <- 1-sum((CV_fitted[-naind] - CV_true[-naind])^2)/
sum((CV_true[-naind] - mean(CV_true[-naind]))^2)
Rsq_gam
length(CV_true[-naind])
CV_ind <- c(0)
CV_fitted <- c(0)
for (k in 1: K){
trainind <- rep(0, length(ind_CVtest_s))
trainind[which(ind_CVtest_s!= k & ind_CVtest_s > 0)] <- 1
splitind <- which(ind_CVtest_s == k+K | ind_CVtest_s == k + K +1)
removeind <- c(0)
for( i in splitind) {
removeind <- c(removeind, i+ c(-9:9))
}
removeind <- removeind[which(removeind> 0 & removeind <= length(ind_CVtest_s))]
trainind[removeind] <- 0
CPC_hwy_1 <- lm(log2(DUS_O * 1000 + 1) ~ Temp_O + RH_O + TempF.pred +
Humidity.pred + WindDirectionDegrees.pred + WinspeedMPH.pred +
Speed + static+ landuse2 +Weekday + Summer,
data = OnRoadData_select[which(trainind == 1), ],
na.action = na.omit)
print(summary(CPC_hwy_1))
testind <- rep(0, length(ind_CVtest_s))
testind[which(ind_CVtest_s == k & ind_CVtest_s > 0)] <- 1
CV_ind <- c(CV_ind, which(testind==1))
p1 <- predict(CPC_hwy_1, newdata = OnRoadData_select[which(testind==1),])
CV_fitted <- c(CV_fitted, p1)
cat(k, "th", "CV is done", "\n")
#p1_true <- log2(OnRoadData_select[which(testind == 1), "CPC_O"])
p1_true <- log2(1000*OnRoadData_select[which(testind == 1), "DUS_O"]+1)
naind <- which(is.na(p1) | is.na(p1_true))
Rsq_gam_p <- 1-sum((p1[-naind] - p1_true[-naind])^2)/
sum((p1_true[-naind] - mean(p1_true[-naind]))^2)
cat(k, "th", "CV is done, Rsq = ", Rsq_gam_p, "\n")
}
#CV_true <- log2(OnRoadData_select[CV_ind[-1], "CPC_O"])
CV_true <- log2(1000*OnRoadData_select[CV_ind[-1], "DUS_O"]+1)
CV_fitted <- CV_fitted[-1]
naind <- which(is.na(CV_fitted) | is.na(CV_true))
Rsq_gam <- 1-sum((CV_fitted[-naind] - CV_true[-naind])^2)/
sum((CV_true[-naind] - mean(CV_true[-naind]))^2)
Rsq_gam
length(CV_true[-naind])
CPC_hwy_1 <- lm(log2(DUS_O * 1000 + 1) ~ Temp_O + RH_O + TempF.pred +
Humidity.pred + WindDirectionDegrees.pred + WinspeedMPH.pred +
Speed + static+ landuse2 +Weekday + Summer ,
data = OnRoadData_select[which(ind_CVtest_s > 0), ],
na.action = na.omit)
summary(CPC_hwy_1)
CPC_hwy_1 <- gam(log2(DUS_O * 1000 + 1) ~ s(Temp_O, RH_O, bs = "tp") +
s(TempF.pred, Humidity.pred, bs = "tp") +
s(windNS, windEW, bs = "tp") + s(Speed, bs = "tp") +
landuse2 +static +  Weekday + Summer ,
data = OnRoadData_select[which(ind_CVtest_s > 0), ],
na.action = na.omit)
summary(CPC_hwy_1)
BIC(CPC_hwy_1)
round(summary(CPC_hwy_1)$edf)+1
CPC_hwy_1 <- gamm(log2(DUS_O * 1000 + 1) ~ s(Temp_O, RH_O, bs = "tp") +
s(TempF.pred, Humidity.pred, bs = "tp") +
s(windNS, windEW, bs = "tp") + s(Speed, bs = "tp") +
landuse2 +static +  Weekday + Summer ,
data = OnRoadData_select[which(ind_CVtest_s > 0), ],
na.action = na.omit,
corr = corAR1(form = ~ 1 | driver_ID /day_ID))
BIC(CPC_hwy_1$lme)
round(summary(CPC_hwy_1$gam)$edf)+1
summary(CPC_hwy_1$gam)
CPC_hwy_1 <- gamm(log2(DUS_O * 1000 + 1) ~ s(Temp_O, RH_O, bs = "tp") +
s(TempF.pred, Humidity.pred, bs = "tp") +
s(windNS, windEW, bs = "tp") + s(Speed, bs = "tp") +
static +  Weekday + Summer ,
data = OnRoadData_select[which(ind_CVtest_s > 0), ],
na.action = na.omit,
corr = corAR1(form = ~ 1 | driver_ID /day_ID))
summary(CPC_hwy_1$gam)
CPC_hwy_1 <- gamm(log2(DUS_O * 1000 + 1) ~ s(Temp_O, RH_O, bs = "tp") +
s(TempF.pred, Humidity.pred, bs = "tp") +
s(windNS, windEW, bs = "tp") + s(Speed, bs = "tp") +
Weekday + Summer ,
data = OnRoadData_select[which(ind_CVtest_s > 0), ],
na.action = na.omit,
corr = corAR1(form = ~ 1 | driver_ID /day_ID))
summary(CPC_hwy_1$gam)
CPC_hwy_1 <- gamm(log2(DUS_O * 1000 + 1) ~ s(Temp_O, RH_O, bs = "gp") +
s(TempF.pred, Humidity.pred, bs = "gp") +
s(windNS, windEW, bs = "gp") + s(Speed, bs = "gp") +
Weekday + Summer ,
data = OnRoadData_select[which(ind_CVtest_s > 0), ],
na.action = na.omit,
corr = corAR1(form = ~ 1 | driver_ID /day_ID))
#corr = corARMA(p = 1, q = 1, form = ~ 1 | driver_ID /day_ID))
#correlation = corSpatial(
#form =  ~ time| driver_ID/day_ID,
#nugget = TRUE, type = "exponential",
#metric = "euclidean") )
BIC(CPC_hwy_1$lme)
round(summary(CPC_hwy_1$gam)$edf)+1
summary(CPC_hwy_1$gam)
CV_ind <- c(0)
CV_fitted <- c(0)
for (k in 1: K){
trainind <- rep(0, length(ind_CVtest_s))
trainind[which(ind_CVtest_s!= k & ind_CVtest_s > 0)] <- 1
splitind <- which(ind_CVtest_s == k+K | ind_CVtest_s == k + K +1)
removeind <- c(0)
for( i in splitind) {
removeind <- c(removeind, i+ c(-9:9))
}
removeind <- removeind[which(removeind> 0 & removeind <= length(ind_CVtest_s))]
trainind[removeind] <- 0
CPC_hwy_1 <- gamm(log2(DUS_O * 1000 + 1) ~ s(Temp_O, RH_O, bs = "tp") +
s(TempF.pred, Humidity.pred, bs = "tp") +
s(windNS, windEW, bs = "tp") + s(Speed, bs = "tp") +
Weekday + Summer ,
data = OnRoadData_select[which(trainind == 1), ],
na.action = na.omit,
corr = corAR1(form = ~ 1 | driver_ID /day_ID))
#corr = corARMA(p = 1, q = 1, form = ~ 1 | driver_ID /day_ID))
#correlation = corSpatial(
#   form =  ~ time| driver_ID/day_ID,
#   nugget = TRUE, type = "exponential",
#  metric = "euclidean") )
print(summary(CPC_hwy_1$gam))
testind <- rep(0, length(ind_CVtest_s))
testind[which(ind_CVtest_s == k & ind_CVtest_s > 0)] <- 1
CV_ind <- c(CV_ind, which(testind==1))
p1 <- predict(CPC_hwy_1$gam, newdata = OnRoadData_select[which(testind==1),])
CV_fitted <- c(CV_fitted, p1)
cat(k, "th", "CV is done", "\n")
#p1_true <- log2(OnRoadData_select[which(testind == 1), "CPC_O"])
p1_true <- log2(1000*OnRoadData_select[which(testind == 1), "DUS_O"]+1)
naind <- which(is.na(p1) | is.na(p1_true))
Rsq_gam_p <- 1-sum((p1[-naind] - p1_true[-naind])^2)/
sum((p1_true[-naind] - mean(p1_true[-naind]))^2)
cat(k, "th", "CV is done, Rsq = ", Rsq_gam_p, "\n")
}
CV_true <- log2(1000*OnRoadData_select[CV_ind[-1], "DUS_O"]+1)
CV_fitted <- CV_fitted[-1]
naind <- which(is.na(CV_fitted) | is.na(CV_true))
Rsq_gam <- 1-sum((CV_fitted[-naind] - CV_true[-naind])^2)/
sum((CV_true[-naind] - mean(CV_true[-naind]))^2)
Rsq_gam
length(CV_true[-naind])
CPC_hwy_1 <- gamm(log2(DUS_O * 1000 + 1) ~ s(Temp_O, RH_O, bs = "tp") +
s(TempF.pred, Humidity.pred, bs = "tp") +
s(windNS, windEW, bs = "tp") + s(Speed, bs = "tp") +
Weekday + Summer ,
data = OnRoadData_select[which(ind_CVtest_s > 0), ],
na.action = na.omit,
corr = corAR1(form = ~ 1 | driver_ID /day_ID))
DUS_local_gam_ar1 <- CPC_hwy_1
save(DUS_local_gam_ar1,
file = "~/Google Drive/on_road/models/DUS_local_gam_ar1.RData")
summary(CPC_hwy_1$gam)
round(summary(CPC_hwy_1$gam)$edf)+1
source('~/Documents/Biostats/research/bitbucket/nngp_stan/stan_test_paper/data/HMCprep.R')
setwd("/Users/luzhang/Documents/Biostats/research/bitbucket/nngp_stan/stan_test_paper/data")
rm(list=ls())
library(fields)
#load("nngp_w_15.RData")
rmvn <- function(N, mu = 0, V = matrix(1)){
P <- length(mu)
if(any(is.na(match(dim(V), P))))
stop("Dimension problem!")
D <- chol(V)
t(matrix(rnorm(N * P), ncol = P) %*% D + rep(mu, rep(N, P)))
}
#set.seed(1)
set.seed(123)
N <- 1000
coords <- cbind(runif(N), runif(N))
##coords <- as.matrix(expand.grid(seq(0,1,length.out=25), seq(0,1,length.out=10)))
dim(coords)
coords <- coords[order(coords[,1]),]
X <- as.matrix(cbind(1, rnorm(N)))
B <- as.matrix(c(1,-5))
sigma.sq <- 2
tau.sq <- 0.2
phi <- 12
D <- as.matrix(dist(coords))
D_lit <- dist(coords)
R <- exp(-phi*D)
w <- rmvn(1, rep(0, N), sigma.sq*R)
Y <- rnorm(N, X %*% B + w, sqrt(tau.sq))
write.table(c(coords), "coords.txt", row.names=F, col.names=F, sep="\t")
write.table(c(X), "X.txt", row.names=F, col.names=F, sep="\t")
write.table(c(Y), "Y.txt", row.names=F, col.names=F, sep="\t")
write.table(c(w), "w.txt", row.names=F, col.names=F, sep="\t")
write.table(c(D), "dist.txt", row.names=F, col.names=F, sep="\t")
#------------------------------------------------------------------------------#
M = 10
#m = 13
#m = 15
# get the neighborhood index for each location
# s: location matrix, each row records coordinates of one point
# m: number of neighborhood
i_index <- function(i, s, m) {
#if (is.element("fields", installed.packages()[, 1]))
#  library(fields)
if(m >= (i - 1)) {im <- 1:(i - 1)}
else 	{
dist <- rdist(s[c(1,i),], s[c(1:(i-1)), ])[-1,]
im <- sort(order(dist)[1:m])
}
return(im)
}
#### distance matrix for location i and its neighbors ####
i_dist <- function(i, neighbor_index, s)	dist(s[c(i, neighbor_index[[i - 1]]), ])
get_index_dist <- function(s, m) {
n = nrow(s)
m = min(m, n-1)
# get index of neighborhood
neighbor_index <- sapply(2:n, i_index, s, m)
# get distance matrix for each i
neighbor_dist <- sapply(2:n, i_dist, neighbor_index, s)
return(list(i = neighbor_index, d = neighbor_dist))
}
ind_distM <- get_index_dist(coords, M);
get_neardistM <- function (ind, ind_distM_d) {
if (ind < m ){l = ind } else {l = m};
M_i <- rep(0, m * (m - 1) / 2);
if (l == 1) {}
else{
M_i[1: (l * (l - 1) / 2)] <-
c(ind_distM_d[[ind]])[(l + 1): (l * (l + 1) / 2)]
}
return(M_i)
}
neardistM <- sapply(1: (N - 1), get_neardistM, ind_distM$d)
source('~/Documents/Biostats/research/bitbucket/nngp_stan/stan_test_paper/data/HMCprep.R')
source('~/Documents/Biostats/research/bitbucket/nngp_stan/stan_test_paper/data/HMCprep.R')
get_neardistM <- function (ind, ind_distM_d) {
if (ind < M ){l = ind } else {l = M};
M_i <- rep(0, M * (M - 1) / 2);
if (l == 1) {}
else{
M_i[1: (l * (l - 1) / 2)] <-
c(ind_distM_d[[ind]])[(l + 1): (l * (l + 1) / 2)]
}
return(M_i)
}
source('~/Documents/Biostats/research/bitbucket/nngp_stan/stan_test_paper/data/HMCprep.R')
source('~/Documents/Biostats/research/bitbucket/nngp_stan/stan_test_paper/data/HMCprep.R')
source('~/Documents/Biostats/research/bitbucket/nngp_stan/stan_test_paper/data/HMCprep.R')
source('~/Documents/Biostats/research/bitbucket/nngp_stan/stan_test_paper/data/HMCprep.R')
